server:
  port: ${SERVER_PORT:8082}
  address: 0.0.0.0

spring:
  application:
    name: location-service
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:location-service-group}
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      properties:
        allow.auto.create.topics: false
        group.instance.id: ${HOSTNAME:${spring.application.name}}-${spring.application.index:0}
    listener:
      ack-mode: MANUAL_IMMEDIATE

location:
  kafka:
    topics:
      bootstrapServers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
      consumerGroupId: location-service-group
      deviceLocation: device.location
      deviceInfo: device.info



logging:
  level:
    com.aman.location: INFO
    org.springframework.kafka: INFO
    org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info